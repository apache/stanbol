# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ------------
# Index Metadata
# ------------

# Here the name of the dataset MUST be specified by the user
# It MUST BE a single word with no spaces.
name=geonames

# an optional short description may be used. If missing default descriptions are
# created.
description=The GeoNames geographical database covers all countries and contains over eight million placenames.

# The "Synchronized" property is supported by some Entityhub Yard implementations
# to automatically update/delete local data as soon as the created archive with
# the indexed data is updated/deleted in the /datafiles folder of Apache Stanbol
# By default this feature is activated. For very big indexes users might want to
# disable this feature to allow the deletion of the archive after the index was
# initialised successfully.
# By default this feature is enabled. Uncommend the next line to deactivate it.
Synchronized=false

# ------------
# Indexing Source
# ------------

#the configured source is also the default. You can also configure a directory
#if you want to index from multiple dumps (e.g. only specific countries)
entityDataIterable=org.apache.stanbol.entityhub.indexing.geonames.GeonamesIndexingSource,source:geonames/allCountries.zip
#no support for entity scores
entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.NoEntityScoreProvider

# ------------
# EntityProcessor
# ------------

# Three processors
# (1) alternate labels
# (2) hierarchy
# (3) field mappings
# Default Entity Processor configuration
entityProcessor=org.apache.stanbol.entityhub.indexing.geonames.AlternateLabelProcessor;org.apache.stanbol.entityhub.indexing.geonames.HierarchyProcessor;org.apache.stanbol.entityhub.indexing.core.processor.FiledMapperProcessor

# ------------
# Index Field Configuration
# ------------

# This could be used to filter some values or to copy over field values
fieldConfiguration=mappings.txt


# ------------
# Post-Processing
# ------------

# The indexing tool now supports a post-processing step that is executed after
# all entities are already indexed to the indexing destination.
# For this step the configured IndexingDestination is used as both the source
# and the target.
# The post-processing allows to apply an additional set of EntityProcessor
# instances to each indexed Entity.
# In principle all EntityProcessor implementations as used for entity processing
# during the normal indexing phase can also be used for post-processing. However
# as there are already all information available within the IndexingDestination
# this phase can also be used to perform processing steps that would not be
# easily possible during the indexing phase.

# LdpathPostProcessor
#
# EntityProcessor that wraps the IndexingDestination as RDF Backend and
# therefore allows to execute any kind of LDpath programs based on the indexed
# Entity data.
# Typical use cases of this processor include:
# * indexing transitive closures
#      skos:broaderTransitive = (skos:broader)*</code>
# * collecting labels of referenced entities to be used for disambiguation (e.g.
#   use lables of linked concepts in a SKOS concept scheme : 
#       <urn:disambiguate.label> = *[rdf:type is skos:Concept]/(skos:prefLabel | skos:altLabel)
# * advanced indexing rules that need paths longer than one (e.g. adding
#   labels of redirects pointing to an entity 
#        rdfs:label = rdfs:label | (^rdfs:seeAlso/rdfs:label)
#
# Parameter: This uses the same parameter as the LdpathProcessor.

#entityPostProcessor=org.apache.stanbol.entityhub.indexing.core.processor.LdpathPostProcessor,ldpath:ldpath-post-mapping.txt,append:true


# ------------
# Indexing Destination
# ------------

# A SolrYard is used as destination for indexing
# To boost some fields (typically labels) one can use the fieldboosts.properties
# A default field boost configuration is provided.
indexingDestination=org.apache.stanbol.entityhub.indexing.destination.solryard.SolrYardIndexingDestination,boosts:fieldboosts


# ------------
# Additional configurations for ReferencedSite
# ------------

# All the following properties are optional, but can be used to configure
# the referenced site used to access the indexed data within the Entityhub

# The entity prefixes are used to determine if an entity needs to be searched
# on a referenced site. If not specified requests for any entity will be
# forwarded to this referenced site.
# use ';' to seperate multiple values
#org.apache.stanbol.entityhub.site.entityPrefix=http://example.org/resource;urn:mycompany:

# Configuration the remote Service
# If the indexed data are also available remotly (e.g. by a Linked data endpoint)
# than it is possible to allow also direct access to such entities
# (a) retrieving entities (access URI and EntityDereferencer implementation)
#org.apache.stanbol.entityhub.site.accessUri="http://example.org/resource"
#org.apache.stanbol.entityhub.site.dereferencerType=
# available EntityDereferencer implementation
# - org.apache.stanbol.entityhub.dereferencer.CoolUriDereferencer
# - org.apache.stanbol.entityhub.dereferencer.SparqlDereferencer

# (b) search entities (queryUri and EntitySearcher implementation)
#org.apache.stanbol.entityhub.site.queryUri=http://example.org/sparql
#org.apache.stanbol.entityhub.site.searcherType=
# available EntitySearcher implementation
# - org.apache.stanbol.entityhub.searcher.SparqlSearcher (generic SPARQL)
# - org.apache.stanbol.entityhub.searcher.LarqSearcher (Larq SPARQL extensions)
# - org.apache.stanbol.entityhub.searcher.VirtuosoSearcher (Virtuoso SPARQL extensions)

# The referenced site can also specify additional mappings to be used in the
# case an entity of this site is imported to the Entityhub.
# Typically the same mappings as used for the indexing are a good start. 
# However one might want to copy some values (e.g. labels) to commonly used
# fields used by the Entityhub
org.apache.stanbol.entityhub.site.fieldMappings=mappings.txt


# License(s)
# Add here the name and URLs of the license to be used for all entities
# provided by this referenced site
# NOTE: licenseName and licenseUrl MUST use the ordering as below!
# This example shows dual licensing with "cc by-sa" and GNU
org.apache.stanbol.entityhub.site.licenseName=Creative Commons Attribution 3.0 License
org.apache.stanbol.entityhub.site.licenseUrl=http://creativecommons.org/licenses/by/3.0/

# Attribution
# Some Licenses require attributions. This properties can be used to provide a
# link to the site with the attribution and the attribution text
org.apache.stanbol.entityhub.site.attributionUrl=http://www.geonames.org/about.html
org.apache.stanbol.entityhub.site.attribution=GeoNames

