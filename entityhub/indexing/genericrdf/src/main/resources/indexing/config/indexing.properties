# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ------------
# Index Metadata
# ------------

# Here the name of the dataset MUST be specified by the user
# It MUST BE a single word with no spaces.
name=changeme

# an optional short description may be used. If missing default descriptions are
# created.
description=short description (http://www.example.org)

# The "Synchronized" property is supported by some Entityhub Yard implementations
# to automatically update/delete local data as soon as the created archive with
# the indexed data is updated/deleted in the /datafiles folder of Apache Stanbol
# By default this feature is activated. For very big indexes users might want to
# disable this feature to allow the deletion of the archive after the index was
# initialised successfully.
# By default this feature is enabled. Uncommend the next line to deactivate it.
Synchronized=true

# ------------
# Indexing Mode dependent Configurations: (see readme.md for details)
# ------------

# The indexing Tool support two modes. See (1) and (2) for details.

# (1) Iterate over Data and lookup scores: (default)
# ------------

# use the Jena TDB as source for indexing the RDF data located within
# "indexing/resource/rdfdata"
entityDataIterable=org.apache.stanbol.entityhub.indexing.source.jenatdb.RdfIndexingSource,source:rdfdata

#NOTE: if you want to index Bnodes you need to activate the bnode parameter
#  see STANBOL-765 for details (and documentation)
#entityDataIterable=org.apache.stanbol.entityhub.indexing.source.jenatdb.RdfIndexingSource,source:rdfdata,bnode:true

# The EntityScore Provider needs to provide the scores for indexed entities
# use the NoEntityScoreProvider if no scores are available
entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.NoEntityScoreProvider

# The EntityFieldScoreProvider can be used to use the value of an property as score
# the property can be configured by the "field" parameter
# Scores are parsed from numbers and strings that can be converted to numbers.
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.EntityFieldScoreProvider,field:http://www.example.org/myOntology#score

# The EntityIneratorToScoreProviderAdapter can be used to adapt any configured
# "entityIdIterator" to an "entityScoreProvider". See also the comments for 
# "entityIdIterator".
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.EntityIneratorToScoreProviderAdapter

# Indexing VCARD

# Alternative configuration for indexing vCard files
# change the config for the vcard indexer in the "vcard.properties" file
#entityDataIterable=org.apache.stanbol.entityhub.indexing.source.vcard.VcardIndexingSource,config:vcard
#entityScoreProvider=org.apache.stanbol.entityhub.indexing.core.source.NoEntityScoreProvider



# (2) Iterate over Entity IDs and lookup Data
# ------------

# First one needs to provide an EntityIterator
# Typically the LineBasedEntityIterator implementation is used. The configuration
# for this implementation is typically provided in an own file. A default 
# configuration is provided by the iditerator.properties file.
#entityIdIterator=org.apache.stanbol.entityhub.indexing.core.source.LineBasedEntityIterator,config:iditerator

# This EntityIterator allows to use a simple Triple filter to select entities for Indexing.
# It uses the same configuration as "FieldValueFilter" but DOES NOT support
# Wildcards. See "FieldValueFilter" for details on how to configure!
#
# NOTE: Can only be used if Jena TDB (jenatdb.RdfIndexingSource) is used as
#       indexing source!
#entityIdIterator=org.apache.stanbol.entityhub.indexing.source.jenatdb.ResourceFilterIterator,config:entityTypes.properties

# Second a entityDataProvide needs to be specified. Here we use the Jena TDB 
# Note that this implementation implements both entityDataIterable AND
# entityDataProvider.
# RDF data needs to be located in the "indexing/resource/rdfdata"
# entityDataProvider=org.apache.stanbol.entityhub.indexing.source.jenatdb.RdfIndexingSource,source:rdfdata

# ------------
#Score Normalizer
# ------------

# Entity Scores are normalised by the ScoreNormalizer
# if no score normaliser is configured the scores will be used as provided by
# the entities
#scoreNormalizer=

# ScoreNormalizer can be chained as shown by the following example configuration
# The score for an entity is first processed by the last normalizer
#scoreNormalizer=org.apache.stanbol.entityhub.indexing.core.normaliser.RangeNormaliser,config:scorerange;org.apache.stanbol.entityhub.indexing.core.normaliser.NaturalLogNormaliser;org.apache.stanbol.entityhub.indexing.core.normaliser.MinScoreNormalizer,config:minscore

# Different Implementations:
#  - RangeNormaliser: allows to define a range for score values. see
#    "scorerange.properties" for possible configurations
#  - NaturalLogNormaliser: Should be used if the score represents the number of
#    incommings links.
#  - MinScoreNormalizer: allows to prevent indexing of all entities with a score
#    lower than the configured minimum. see "minscore.properties" for possible
#    configurations.

# ------------
# Entity Processor
# ------------

# Multiple Entity processors can be used for indexing entities. The are separated by ';'
# and are executed in the order of definition.

# FiledMapperProcessor:
# 
# entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.FiledMapperProcessor
#
# This processor ensures that "field mappings" are executed while indexing entities.
# By default it will use the mappings configured by the "fieldConfiguraton"
# property. To use other mappings one can use the "mappings" parameter (e.g.
# mappings:otherMappings.txt

# FieldValueFilter
# 
#entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.FieldValueFilter,config:entityTypes
# 
# This allows to define a field and values that are used to filter entities. Only Entities
# that do have one of the defined values as actual value of the defined field will
# get indexed. This is typically used to filter entities by rdf:type, but can be used
# for any URI property. See the default entityTypes.properties file for more information

# ResourceUriFilter
# 
#entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.ResourceUriFilter,prefix:http://www.eample.org/
# 
# This allows to filter all resource that do not start with the configured prefix

# LdpathProcessor
# 
# This allows to use simple LDpath statements to process entities. Such as mapping
# only properties of entities with a specific type
# 
#      skos:prefLabel = .[rdf:type is <http://example.org/MyType>]/rdfs:label; 
# 
# Praameters:
# * append:[true/flase] (default=true) If the result of the LDpath program is
#     appended to the processed entity or if the processed entity should be
#     replaced with the results of the LDpath program
# * ldpath:{file} (required, no default) The {file} containing the LDpath
#     program used by this processor. {file} is relative to the config directory.
# 
# NOTEs:
# * The LdpathProcessor has only access to the local properties of the currently 
#   indexed entity. LDPath statements that refer other information such as paths 
#   with a lengths > 1 or inverse properties will not work
# * Processors can be chained by defining multiple Processor instances in the 
#   configuration and separating them with ';'. This allows to use multiple 
#   LdpathProcessor instances and/or to chain LdpathProcessor(s) with others 
#   such as the "FiledMapperProcessor". Processors are executed as defined 
#   within the configuration of the "entityProcessor" property. 
# * When using the FiledMapperProcessor on results of the LdpathProcessor make 
#   sure that the fields defined in the LDpath statements are indexed by the 
#   FiledMapperProcessor. Otherwise such values will NOT be indexed!
# org.apache.stanbol.entityhub.indexing.core.processor.LdpathProcessor,ldpath:ldpath-mapping.txt,append:true

# GeonamesUriProcessor
#
# A typical case is that geonames URIs are missing the tailing '/'. This processor
# will search for geonames URIs and correct them.
# org.apache.stanbol.entityhub.indexing.core.processor.GeonamesUriProcessor

# WikipediaToDBPediaUriProcessor
#
# This processor will rewrite Wikipedia URIs to DBPedia URIs
# (e.g. "http://de.wikipedia.org/wiki/Hawaii" to "http://de.dbpedia.org/resource/Hawaii"
# org.apache.stanbol.entityhub.indexing.core.processor.WikipediaToDBPediaUriProcessor

# EmptyProcessor
#
#entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.EmptyProcessor
#
# This processor can be used to deactivate EntityProcessing

# Default Entity Processor configuration
entityProcessor=org.apache.stanbol.entityhub.indexing.core.processor.FieldValueFilter,config:entityTypes;org.apache.stanbol.entityhub.indexing.core.processor.FiledMapperProcessor

# ------------
# Index Field Configuration
# ------------

# An index needs to provide its configuration. This is used at runtime if 
# entities are updated.
fieldConfiguration=mappings.txt


# ------------
# Post-Processing
# ------------

# The indexing tool now supports a post-processing step that is executed after
# all entities are already indexed to the indexing destination.
# For this step the configured IndexingDestination is used as both the source
# and the target.
# The post-processing allows to apply an additional set of EntityProcessor
# instances to each indexed Entity.
# In principle all EntityProcessor implementations as used for entity processing
# during the normal indexing phase can also be used for post-processing. However
# as there are already all information available within the IndexingDestination
# this phase can also be used to perform processing steps that would not be
# easily possible during the indexing phase.

# LdpathPostProcessor
#
# EntityProcessor that wraps the IndexingDestination as RDF Backend and
# therefore allows to execute any kind of LDpath programs based on the indexed
# Entity data.
# Typical use cases of this processor include:
# * indexing transitive closures
#      skos:broaderTransitive = (skos:broader)*</code>
# * collecting labels of referenced entities to be used for disambiguation (e.g.
#   use lables of linked concepts in a SKOS concept scheme : 
#       <urn:disambiguate.label> = *[rdf:type is skos:Concept]/(skos:prefLabel | skos:altLabel)
# * advanced indexing rules that need paths longer than one (e.g. adding
#   labels of redirects pointing to an entity 
#        rdfs:label = rdfs:label | (^rdfs:seeAlso/rdfs:label)
#
# Parameter: This uses the same parameter as the LdpathProcessor.

#entityPostProcessor=org.apache.stanbol.entityhub.indexing.core.processor.LdpathPostProcessor,ldpath:ldpath-post-mapping.txt,append:true


# ------------
# Indexing Destination
# ------------

# A SolrYard is used as destination for indexing
# To boost some fields (typically labels) one can use the fieldboosts.properties
# A default field boost configuration is provided.
# A default fst.config is also provided (see STANBOL-1167)
indexingDestination=org.apache.stanbol.entityhub.indexing.destination.solryard.SolrYardIndexingDestination,boosts:fieldboosts,fstConf:fst.config


# ------------
# Additional configurations for ReferencedSite
# ------------

# All the following properties are optional, but can be used to configure
# the referenced site used to access the indexed data within the Entityhub

# The entity prefixes are used to determine if an entity needs to be searched
# on a referenced site. If not specified requests for any entity will be
# forwarded to this referenced site.
# use ';' to seperate multiple values
#org.apache.stanbol.entityhub.site.entityPrefix=http://example.org/resource;urn:mycompany:

# Configuration the remote Service
# If the indexed data are also available remotly (e.g. by a Linked data endpoint)
# than it is possible to allow also direct access to such entities
# (a) retrieving entities (access URI and EntityDereferencer implementation)
#org.apache.stanbol.entityhub.site.accessUri="http://example.org/resource"
#org.apache.stanbol.entityhub.site.dereferencerType=
# available EntityDereferencer implementation
# - org.apache.stanbol.entityhub.dereferencer.CoolUriDereferencer
# - org.apache.stanbol.entityhub.dereferencer.SparqlDereferencer

# (b) search entities (queryUri and EntitySearcher implementation)
#org.apache.stanbol.entityhub.site.queryUri=http://example.org/sparql
#org.apache.stanbol.entityhub.site.searcherType=
# available EntitySearcher implementation
# - org.apache.stanbol.entityhub.searcher.SparqlSearcher (generic SPARQL)
# - org.apache.stanbol.entityhub.searcher.LarqSearcher (Larq SPARQL extensions)
# - org.apache.stanbol.entityhub.searcher.VirtuosoSearcher (Virtuoso SPARQL extensions)

# The referenced site can also specify additional mappings to be used in the
# case an entity of this site is imported to the Entityhub.
# Typically the same mappings as used for the indexing are a good start. 
# However one might want to copy some values (e.g. labels) to commonly used
# fields used by the Entityhub
org.apache.stanbol.entityhub.site.fieldMappings=mappings.txt


# License(s)
# Add here the name and URLs of the license to be used for all entities
# provided by this referenced site
# NOTE: licenseName and licenseUrl MUST use the ordering as below!
# This example shows dual licensing with "cc by-sa" and GNU
#org.apache.stanbol.entityhub.site.licenseName=Creative Commons Attribution-ShareAlike 3.0;GNU Free Documentation License
#org.apache.stanbol.entityhub.site.licenseUrl=http://creativecommons.org/licenses/by-sa/3.0/;http://www.gnu.org/licenses/fdl.html

# Attribution
# Some Licenses require attributions. This properties can be used to provide a
# link to the site with the attribution and the attribution text
#org.apache.stanbol.entityhub.site.attributionUrl=http://example.org/About.html
#org.apache.stanbol.entityhub.site.attribution=To the universe


# Fail on Error loading Resource Files 
# The indexing tool can be configured to fail on error loading resource files.
# By default, a resource file will be ignored when an error occurs while trying to load it
failOnErrorLoadingResource=false


